var express = require('express');
var socket = require('socket.io');
var mongo = require('mongodb').MongoClient;

//Connect to mongodb.
mongo.connect('mongodb://localhost:27017/public', function(err,db) {
  if (err) {
    throw err;
  };

  console.log('MongoDB connected.');
});

var app = express();
var server = app.listen(80,function(){
  console.log('listening to requests on port 80')
});

app.use(express.static('public'));

var io = socket(server);
var connectionCounter = 0;
var client_status = [];

io.on('connection',function(socket){
  connectionCounter ++;
  client_status.push([socket.id, 0]);
  console.log(socket.id, 'made socket connection. Current connections:', connectionCounter);
  console.log(client_status.toString());
  io.sockets.emit('connectionCount', connectionCounter);

  socket.on('disconnect', function() {
    for (var i = 0; j = client_status.length, i < j; i ++) {
      if (client_status[i][0] == socket.id) {
        client_status.splice(i, 1);
      }
    };
    connectionCounter --;
    console.log(socket.id, 'has disconnected. Current connections:', connectionCounter);
    console.log(client_status.toString());
    io.sockets.emit('connectionCount', connectionCounter);
  });

  socket.on('ready_status',function() {
    for (var i = 0; j = client_status.length, i < j; i++) {
      if (client_status[i][0] == socket.id) {
        client_status[i][1] = 1;
        console.log(socket.id, "is ready.")
      };
    }
  })

  var sessionid = 0;

  socket.on('ready_check', function() {
    var readyCounter = 0;
    for (var i = 0; j = client_status.length, i < j; i++) {
      if (client_status[i][1] == 1) {
        readyCounter++;
      };
    }
    io.sockets.emit('ready_check', readyCounter);
    if (readyCounter == connectionCounter && connectionCounter > 1) {
      io.sockets.emit('app_start', 1);
      sessionid = parseInt(Math.random() * 100000000000 + 1);
      console.log("Everyone is ready! Session ID is " + sessionid);
    }
    else {
      io.sockets.emit('app_start', 0);
      console.log("Everyone is ready, but waiting on more user.")
    }
  })

  socket.on('chat', function(data){
    io.sockets.emit('chat', data);
  });


});
